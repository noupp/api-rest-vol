{"ast":null,"code":"import { __awaiter } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport { HttpHeaders, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Subject, from } from 'rxjs';\nimport { map, mergeMap } from 'rxjs/operators';\nimport Keycloak from 'keycloak-js';\nimport { CommonModule } from '@angular/common';\nvar KeycloakEventType;\n\n(function (KeycloakEventType) {\n  KeycloakEventType[KeycloakEventType[\"OnAuthError\"] = 0] = \"OnAuthError\";\n  KeycloakEventType[KeycloakEventType[\"OnAuthLogout\"] = 1] = \"OnAuthLogout\";\n  KeycloakEventType[KeycloakEventType[\"OnAuthRefreshError\"] = 2] = \"OnAuthRefreshError\";\n  KeycloakEventType[KeycloakEventType[\"OnAuthRefreshSuccess\"] = 3] = \"OnAuthRefreshSuccess\";\n  KeycloakEventType[KeycloakEventType[\"OnAuthSuccess\"] = 4] = \"OnAuthSuccess\";\n  KeycloakEventType[KeycloakEventType[\"OnReady\"] = 5] = \"OnReady\";\n  KeycloakEventType[KeycloakEventType[\"OnTokenExpired\"] = 6] = \"OnTokenExpired\";\n})(KeycloakEventType || (KeycloakEventType = {}));\n\nclass KeycloakAuthGuard {\n  constructor(router, keycloakAngular) {\n    this.router = router;\n    this.keycloakAngular = keycloakAngular;\n  }\n\n  canActivate(route, state) {\n    return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n      try {\n        this.authenticated = yield this.keycloakAngular.isLoggedIn();\n        this.roles = yield this.keycloakAngular.getUserRoles(true);\n        const result = yield this.isAccessAllowed(route, state);\n        resolve(result);\n      } catch (error) {\n        reject('An error happened during access validation. Details:' + error);\n      }\n    }));\n  }\n\n}\n\nclass KeycloakService {\n  constructor() {\n    this._keycloakEvents$ = new Subject();\n  }\n\n  bindsKeycloakEvents() {\n    this._instance.onAuthError = errorData => {\n      this._keycloakEvents$.next({\n        args: errorData,\n        type: KeycloakEventType.OnAuthError\n      });\n    };\n\n    this._instance.onAuthLogout = () => {\n      this._keycloakEvents$.next({\n        type: KeycloakEventType.OnAuthLogout\n      });\n    };\n\n    this._instance.onAuthRefreshSuccess = () => {\n      this._keycloakEvents$.next({\n        type: KeycloakEventType.OnAuthRefreshSuccess\n      });\n    };\n\n    this._instance.onAuthRefreshError = () => {\n      this._keycloakEvents$.next({\n        type: KeycloakEventType.OnAuthRefreshError\n      });\n    };\n\n    this._instance.onAuthSuccess = () => {\n      this._keycloakEvents$.next({\n        type: KeycloakEventType.OnAuthSuccess\n      });\n    };\n\n    this._instance.onTokenExpired = () => {\n      this._keycloakEvents$.next({\n        type: KeycloakEventType.OnTokenExpired\n      });\n    };\n\n    this._instance.onReady = authenticated => {\n      this._keycloakEvents$.next({\n        args: authenticated,\n        type: KeycloakEventType.OnReady\n      });\n    };\n  }\n\n  loadExcludedUrls(bearerExcludedUrls) {\n    const excludedUrls = [];\n\n    for (const item of bearerExcludedUrls) {\n      let excludedUrl;\n\n      if (typeof item === 'string') {\n        excludedUrl = {\n          urlPattern: new RegExp(item, 'i'),\n          httpMethods: []\n        };\n      } else {\n        excludedUrl = {\n          urlPattern: new RegExp(item.url, 'i'),\n          httpMethods: item.httpMethods\n        };\n      }\n\n      excludedUrls.push(excludedUrl);\n    }\n\n    return excludedUrls;\n  }\n\n  initServiceValues({\n    enableBearerInterceptor = true,\n    loadUserProfileAtStartUp = false,\n    bearerExcludedUrls = [],\n    authorizationHeaderName = 'Authorization',\n    bearerPrefix = 'Bearer',\n    initOptions\n  }) {\n    this._enableBearerInterceptor = enableBearerInterceptor;\n    this._loadUserProfileAtStartUp = loadUserProfileAtStartUp;\n    this._authorizationHeaderName = authorizationHeaderName;\n    this._bearerPrefix = bearerPrefix.trim().concat(' ');\n    this._excludedUrls = this.loadExcludedUrls(bearerExcludedUrls);\n    this._silentRefresh = initOptions ? initOptions.flow === 'implicit' : false;\n  }\n\n  init(options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.initServiceValues(options);\n      const {\n        config,\n        initOptions\n      } = options;\n      this._instance = Keycloak(config);\n      this.bindsKeycloakEvents();\n      const authenticated = yield this._instance.init(initOptions);\n\n      if (authenticated && this._loadUserProfileAtStartUp) {\n        yield this.loadUserProfile();\n      }\n\n      return authenticated;\n    });\n  }\n\n  login(options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this._instance.login(options);\n\n      if (this._loadUserProfileAtStartUp) {\n        yield this.loadUserProfile();\n      }\n    });\n  }\n\n  logout(redirectUri) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const options = {\n        redirectUri\n      };\n      yield this._instance.logout(options);\n      this._userProfile = undefined;\n    });\n  }\n\n  register(options = {\n    action: 'register'\n  }) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this._instance.register(options);\n    });\n  }\n\n  isUserInRole(role, resource) {\n    let hasRole;\n    hasRole = this._instance.hasResourceRole(role, resource);\n\n    if (!hasRole) {\n      hasRole = this._instance.hasRealmRole(role);\n    }\n\n    return hasRole;\n  }\n\n  getUserRoles(allRoles = true) {\n    let roles = [];\n\n    if (this._instance.resourceAccess) {\n      for (const key in this._instance.resourceAccess) {\n        if (this._instance.resourceAccess.hasOwnProperty(key)) {\n          const resourceAccess = this._instance.resourceAccess[key];\n          const clientRoles = resourceAccess['roles'] || [];\n          roles = roles.concat(clientRoles);\n        }\n      }\n    }\n\n    if (allRoles && this._instance.realmAccess) {\n      const realmRoles = this._instance.realmAccess['roles'] || [];\n      roles.push(...realmRoles);\n    }\n\n    return roles;\n  }\n\n  isLoggedIn() {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        if (!this._instance.authenticated) {\n          return false;\n        }\n\n        yield this.updateToken(20);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    });\n  }\n\n  isTokenExpired(minValidity = 0) {\n    return this._instance.isTokenExpired(minValidity);\n  }\n\n  updateToken(minValidity = 5) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._silentRefresh) {\n        if (this.isTokenExpired()) {\n          throw new Error('Failed to refresh the token, or the session is expired');\n        }\n\n        return true;\n      }\n\n      if (!this._instance) {\n        throw new Error('Keycloak Angular library is not initialized.');\n      }\n\n      return this._instance.updateToken(minValidity);\n    });\n  }\n\n  loadUserProfile(forceReload = false) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._userProfile && !forceReload) {\n        return this._userProfile;\n      }\n\n      if (!this._instance.authenticated) {\n        throw new Error('The user profile was not loaded as the user is not logged in.');\n      }\n\n      return this._userProfile = yield this._instance.loadUserProfile();\n    });\n  }\n\n  getToken() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.updateToken(10);\n      return this._instance.token;\n    });\n  }\n\n  getUsername() {\n    if (!this._userProfile) {\n      throw new Error('User not logged in or user profile was not loaded.');\n    }\n\n    return this._userProfile.username;\n  }\n\n  clearToken() {\n    this._instance.clearToken();\n  }\n\n  addTokenToHeader(headers = new HttpHeaders()) {\n    return from(this.getToken()).pipe(map(token => token ? headers.set(this._authorizationHeaderName, this._bearerPrefix + token) : headers));\n  }\n\n  getKeycloakInstance() {\n    return this._instance;\n  }\n\n  get excludedUrls() {\n    return this._excludedUrls;\n  }\n\n  get enableBearerInterceptor() {\n    return this._enableBearerInterceptor;\n  }\n\n  get keycloakEvents$() {\n    return this._keycloakEvents$;\n  }\n\n}\n\nKeycloakService.ɵfac = function KeycloakService_Factory(t) {\n  return new (t || KeycloakService)();\n};\n\nKeycloakService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: KeycloakService,\n  factory: KeycloakService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(KeycloakService, [{\n    type: Injectable\n  }], null, null);\n})();\n\nclass KeycloakBearerInterceptor {\n  constructor(keycloak) {\n    this.keycloak = keycloak;\n  }\n\n  isUrlExcluded({\n    method,\n    url\n  }, {\n    urlPattern,\n    httpMethods\n  }) {\n    const httpTest = httpMethods.length === 0 || httpMethods.join().indexOf(method.toUpperCase()) > -1;\n    const urlTest = urlPattern.test(url);\n    return httpTest && urlTest;\n  }\n\n  intercept(req, next) {\n    const {\n      enableBearerInterceptor,\n      excludedUrls\n    } = this.keycloak;\n\n    if (!enableBearerInterceptor) {\n      return next.handle(req);\n    }\n\n    const shallPass = excludedUrls.findIndex(item => this.isUrlExcluded(req, item)) > -1;\n\n    if (shallPass) {\n      return next.handle(req);\n    }\n\n    return from(this.keycloak.isLoggedIn()).pipe(mergeMap(loggedIn => loggedIn ? this.handleRequestWithTokenHeader(req, next) : next.handle(req)));\n  }\n\n  handleRequestWithTokenHeader(req, next) {\n    return this.keycloak.addTokenToHeader(req.headers).pipe(mergeMap(headersWithBearer => {\n      const kcReq = req.clone({\n        headers: headersWithBearer\n      });\n      return next.handle(kcReq);\n    }));\n  }\n\n}\n\nKeycloakBearerInterceptor.ɵfac = function KeycloakBearerInterceptor_Factory(t) {\n  return new (t || KeycloakBearerInterceptor)(i0.ɵɵinject(KeycloakService));\n};\n\nKeycloakBearerInterceptor.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: KeycloakBearerInterceptor,\n  factory: KeycloakBearerInterceptor.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(KeycloakBearerInterceptor, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: KeycloakService\n    }];\n  }, null);\n})();\n\nclass CoreModule {}\n\nCoreModule.ɵfac = function CoreModule_Factory(t) {\n  return new (t || CoreModule)();\n};\n\nCoreModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: CoreModule\n});\nCoreModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [KeycloakService, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: KeycloakBearerInterceptor,\n    multi: true\n  }],\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CoreModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      providers: [KeycloakService, {\n        provide: HTTP_INTERCEPTORS,\n        useClass: KeycloakBearerInterceptor,\n        multi: true\n      }]\n    }]\n  }], null, null);\n})();\n\nclass KeycloakAngularModule {}\n\nKeycloakAngularModule.ɵfac = function KeycloakAngularModule_Factory(t) {\n  return new (t || KeycloakAngularModule)();\n};\n\nKeycloakAngularModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: KeycloakAngularModule\n});\nKeycloakAngularModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CoreModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(KeycloakAngularModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CoreModule]\n    }]\n  }], null, null);\n})();\n\nexport { CoreModule, KeycloakAngularModule, KeycloakAuthGuard, KeycloakBearerInterceptor, KeycloakEventType, KeycloakService };","map":{"version":3,"sources":["/home/alexandre/angular-workspace/client-vol/node_modules/keycloak-angular/fesm2015/keycloak-angular.mjs"],"names":["__awaiter","i0","Injectable","NgModule","HttpHeaders","HTTP_INTERCEPTORS","Subject","from","map","mergeMap","Keycloak","CommonModule","KeycloakEventType","KeycloakAuthGuard","constructor","router","keycloakAngular","canActivate","route","state","Promise","resolve","reject","authenticated","isLoggedIn","roles","getUserRoles","result","isAccessAllowed","error","KeycloakService","_keycloakEvents$","bindsKeycloakEvents","_instance","onAuthError","errorData","next","args","type","OnAuthError","onAuthLogout","OnAuthLogout","onAuthRefreshSuccess","OnAuthRefreshSuccess","onAuthRefreshError","OnAuthRefreshError","onAuthSuccess","OnAuthSuccess","onTokenExpired","OnTokenExpired","onReady","OnReady","loadExcludedUrls","bearerExcludedUrls","excludedUrls","item","excludedUrl","urlPattern","RegExp","httpMethods","url","push","initServiceValues","enableBearerInterceptor","loadUserProfileAtStartUp","authorizationHeaderName","bearerPrefix","initOptions","_enableBearerInterceptor","_loadUserProfileAtStartUp","_authorizationHeaderName","_bearerPrefix","trim","concat","_excludedUrls","_silentRefresh","flow","init","options","config","loadUserProfile","login","logout","redirectUri","_userProfile","undefined","register","action","isUserInRole","role","resource","hasRole","hasResourceRole","hasRealmRole","allRoles","resourceAccess","key","hasOwnProperty","clientRoles","realmAccess","realmRoles","updateToken","isTokenExpired","minValidity","Error","forceReload","getToken","token","getUsername","username","clearToken","addTokenToHeader","headers","pipe","set","getKeycloakInstance","keycloakEvents$","ɵfac","ɵprov","KeycloakBearerInterceptor","keycloak","isUrlExcluded","method","httpTest","length","join","indexOf","toUpperCase","urlTest","test","intercept","req","handle","shallPass","findIndex","loggedIn","handleRequestWithTokenHeader","headersWithBearer","kcReq","clone","CoreModule","ɵmod","ɵinj","provide","useClass","multi","imports","providers","KeycloakAngularModule"],"mappings":"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","sourcesContent":["import { __awaiter } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport { HttpHeaders, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Subject, from } from 'rxjs';\nimport { map, mergeMap } from 'rxjs/operators';\nimport Keycloak from 'keycloak-js';\nimport { CommonModule } from '@angular/common';\n\nvar KeycloakEventType;\n(function (KeycloakEventType) {\n    KeycloakEventType[KeycloakEventType[\"OnAuthError\"] = 0] = \"OnAuthError\";\n    KeycloakEventType[KeycloakEventType[\"OnAuthLogout\"] = 1] = \"OnAuthLogout\";\n    KeycloakEventType[KeycloakEventType[\"OnAuthRefreshError\"] = 2] = \"OnAuthRefreshError\";\n    KeycloakEventType[KeycloakEventType[\"OnAuthRefreshSuccess\"] = 3] = \"OnAuthRefreshSuccess\";\n    KeycloakEventType[KeycloakEventType[\"OnAuthSuccess\"] = 4] = \"OnAuthSuccess\";\n    KeycloakEventType[KeycloakEventType[\"OnReady\"] = 5] = \"OnReady\";\n    KeycloakEventType[KeycloakEventType[\"OnTokenExpired\"] = 6] = \"OnTokenExpired\";\n})(KeycloakEventType || (KeycloakEventType = {}));\n\nclass KeycloakAuthGuard {\n    constructor(router, keycloakAngular) {\n        this.router = router;\n        this.keycloakAngular = keycloakAngular;\n    }\n    canActivate(route, state) {\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.authenticated = yield this.keycloakAngular.isLoggedIn();\n                this.roles = yield this.keycloakAngular.getUserRoles(true);\n                const result = yield this.isAccessAllowed(route, state);\n                resolve(result);\n            }\n            catch (error) {\n                reject('An error happened during access validation. Details:' + error);\n            }\n        }));\n    }\n}\n\nclass KeycloakService {\n    constructor() {\n        this._keycloakEvents$ = new Subject();\n    }\n    bindsKeycloakEvents() {\n        this._instance.onAuthError = (errorData) => {\n            this._keycloakEvents$.next({\n                args: errorData,\n                type: KeycloakEventType.OnAuthError\n            });\n        };\n        this._instance.onAuthLogout = () => {\n            this._keycloakEvents$.next({ type: KeycloakEventType.OnAuthLogout });\n        };\n        this._instance.onAuthRefreshSuccess = () => {\n            this._keycloakEvents$.next({\n                type: KeycloakEventType.OnAuthRefreshSuccess\n            });\n        };\n        this._instance.onAuthRefreshError = () => {\n            this._keycloakEvents$.next({\n                type: KeycloakEventType.OnAuthRefreshError\n            });\n        };\n        this._instance.onAuthSuccess = () => {\n            this._keycloakEvents$.next({ type: KeycloakEventType.OnAuthSuccess });\n        };\n        this._instance.onTokenExpired = () => {\n            this._keycloakEvents$.next({\n                type: KeycloakEventType.OnTokenExpired\n            });\n        };\n        this._instance.onReady = (authenticated) => {\n            this._keycloakEvents$.next({\n                args: authenticated,\n                type: KeycloakEventType.OnReady\n            });\n        };\n    }\n    loadExcludedUrls(bearerExcludedUrls) {\n        const excludedUrls = [];\n        for (const item of bearerExcludedUrls) {\n            let excludedUrl;\n            if (typeof item === 'string') {\n                excludedUrl = { urlPattern: new RegExp(item, 'i'), httpMethods: [] };\n            }\n            else {\n                excludedUrl = {\n                    urlPattern: new RegExp(item.url, 'i'),\n                    httpMethods: item.httpMethods\n                };\n            }\n            excludedUrls.push(excludedUrl);\n        }\n        return excludedUrls;\n    }\n    initServiceValues({ enableBearerInterceptor = true, loadUserProfileAtStartUp = false, bearerExcludedUrls = [], authorizationHeaderName = 'Authorization', bearerPrefix = 'Bearer', initOptions }) {\n        this._enableBearerInterceptor = enableBearerInterceptor;\n        this._loadUserProfileAtStartUp = loadUserProfileAtStartUp;\n        this._authorizationHeaderName = authorizationHeaderName;\n        this._bearerPrefix = bearerPrefix.trim().concat(' ');\n        this._excludedUrls = this.loadExcludedUrls(bearerExcludedUrls);\n        this._silentRefresh = initOptions ? initOptions.flow === 'implicit' : false;\n    }\n    init(options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.initServiceValues(options);\n            const { config, initOptions } = options;\n            this._instance = Keycloak(config);\n            this.bindsKeycloakEvents();\n            const authenticated = yield this._instance.init(initOptions);\n            if (authenticated && this._loadUserProfileAtStartUp) {\n                yield this.loadUserProfile();\n            }\n            return authenticated;\n        });\n    }\n    login(options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._instance.login(options);\n            if (this._loadUserProfileAtStartUp) {\n                yield this.loadUserProfile();\n            }\n        });\n    }\n    logout(redirectUri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const options = {\n                redirectUri\n            };\n            yield this._instance.logout(options);\n            this._userProfile = undefined;\n        });\n    }\n    register(options = { action: 'register' }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._instance.register(options);\n        });\n    }\n    isUserInRole(role, resource) {\n        let hasRole;\n        hasRole = this._instance.hasResourceRole(role, resource);\n        if (!hasRole) {\n            hasRole = this._instance.hasRealmRole(role);\n        }\n        return hasRole;\n    }\n    getUserRoles(allRoles = true) {\n        let roles = [];\n        if (this._instance.resourceAccess) {\n            for (const key in this._instance.resourceAccess) {\n                if (this._instance.resourceAccess.hasOwnProperty(key)) {\n                    const resourceAccess = this._instance.resourceAccess[key];\n                    const clientRoles = resourceAccess['roles'] || [];\n                    roles = roles.concat(clientRoles);\n                }\n            }\n        }\n        if (allRoles && this._instance.realmAccess) {\n            const realmRoles = this._instance.realmAccess['roles'] || [];\n            roles.push(...realmRoles);\n        }\n        return roles;\n    }\n    isLoggedIn() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!this._instance.authenticated) {\n                    return false;\n                }\n                yield this.updateToken(20);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        });\n    }\n    isTokenExpired(minValidity = 0) {\n        return this._instance.isTokenExpired(minValidity);\n    }\n    updateToken(minValidity = 5) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._silentRefresh) {\n                if (this.isTokenExpired()) {\n                    throw new Error('Failed to refresh the token, or the session is expired');\n                }\n                return true;\n            }\n            if (!this._instance) {\n                throw new Error('Keycloak Angular library is not initialized.');\n            }\n            return this._instance.updateToken(minValidity);\n        });\n    }\n    loadUserProfile(forceReload = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._userProfile && !forceReload) {\n                return this._userProfile;\n            }\n            if (!this._instance.authenticated) {\n                throw new Error('The user profile was not loaded as the user is not logged in.');\n            }\n            return (this._userProfile = yield this._instance.loadUserProfile());\n        });\n    }\n    getToken() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.updateToken(10);\n            return this._instance.token;\n        });\n    }\n    getUsername() {\n        if (!this._userProfile) {\n            throw new Error('User not logged in or user profile was not loaded.');\n        }\n        return this._userProfile.username;\n    }\n    clearToken() {\n        this._instance.clearToken();\n    }\n    addTokenToHeader(headers = new HttpHeaders()) {\n        return from(this.getToken()).pipe(map((token) => token\n            ? headers.set(this._authorizationHeaderName, this._bearerPrefix + token)\n            : headers));\n    }\n    getKeycloakInstance() {\n        return this._instance;\n    }\n    get excludedUrls() {\n        return this._excludedUrls;\n    }\n    get enableBearerInterceptor() {\n        return this._enableBearerInterceptor;\n    }\n    get keycloakEvents$() {\n        return this._keycloakEvents$;\n    }\n}\nKeycloakService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: KeycloakService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nKeycloakService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: KeycloakService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: KeycloakService, decorators: [{\n            type: Injectable\n        }] });\n\nclass KeycloakBearerInterceptor {\n    constructor(keycloak) {\n        this.keycloak = keycloak;\n    }\n    isUrlExcluded({ method, url }, { urlPattern, httpMethods }) {\n        const httpTest = httpMethods.length === 0 ||\n            httpMethods.join().indexOf(method.toUpperCase()) > -1;\n        const urlTest = urlPattern.test(url);\n        return httpTest && urlTest;\n    }\n    intercept(req, next) {\n        const { enableBearerInterceptor, excludedUrls } = this.keycloak;\n        if (!enableBearerInterceptor) {\n            return next.handle(req);\n        }\n        const shallPass = excludedUrls.findIndex((item) => this.isUrlExcluded(req, item)) > -1;\n        if (shallPass) {\n            return next.handle(req);\n        }\n        return from(this.keycloak.isLoggedIn()).pipe(mergeMap((loggedIn) => loggedIn\n            ? this.handleRequestWithTokenHeader(req, next)\n            : next.handle(req)));\n    }\n    handleRequestWithTokenHeader(req, next) {\n        return this.keycloak.addTokenToHeader(req.headers).pipe(mergeMap((headersWithBearer) => {\n            const kcReq = req.clone({ headers: headersWithBearer });\n            return next.handle(kcReq);\n        }));\n    }\n}\nKeycloakBearerInterceptor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: KeycloakBearerInterceptor, deps: [{ token: KeycloakService }], target: i0.ɵɵFactoryTarget.Injectable });\nKeycloakBearerInterceptor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: KeycloakBearerInterceptor });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: KeycloakBearerInterceptor, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: KeycloakService }]; } });\n\nclass CoreModule {\n}\nCoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CoreModule, imports: [CommonModule] });\nCoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CoreModule, providers: [\n        KeycloakService,\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: KeycloakBearerInterceptor,\n            multi: true\n        }\n    ], imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CoreModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    providers: [\n                        KeycloakService,\n                        {\n                            provide: HTTP_INTERCEPTORS,\n                            useClass: KeycloakBearerInterceptor,\n                            multi: true\n                        }\n                    ]\n                }]\n        }] });\n\nclass KeycloakAngularModule {\n}\nKeycloakAngularModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: KeycloakAngularModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nKeycloakAngularModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: KeycloakAngularModule, imports: [CoreModule] });\nKeycloakAngularModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: KeycloakAngularModule, imports: [[CoreModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: KeycloakAngularModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CoreModule]\n                }]\n        }] });\n\nexport { CoreModule, KeycloakAngularModule, KeycloakAuthGuard, KeycloakBearerInterceptor, KeycloakEventType, KeycloakService };\n"]},"metadata":{},"sourceType":"module"}